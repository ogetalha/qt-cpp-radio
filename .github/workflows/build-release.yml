name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.8.0'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libmpg123-dev portaudio19-dev pkg-config
          
      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          
      - name: Create AppImage
        run: |
          wget -c "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          chmod +x linuxdeploy-x86_64.AppImage
          mkdir -p AppDir/usr/bin
          cp build/appqtradio AppDir/usr/bin/
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --output appimage --plugin qt
          
      - name: Upload AppImage
        uses: actions/upload-artifact@v3
        with:
          name: QtRadio-Linux-x86_64.AppImage
          path: QtRadio*.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.8.0'
          arch: 'win64_msvc2019_64'
          
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'
          
      - name: Install dependencies
        run: |
          vcpkg install curl mpg123 portaudio
          
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
          cmake --build . --config Release
          
      - name: Deploy
        run: |
          mkdir deploy
          cp build/Release/appqtradio.exe deploy/
          windeployqt deploy/appqtradio.exe --qmldir .
          cp $env:VCPKG_ROOT/installed/x64-windows/bin/libcurl.dll deploy/
          cp $env:VCPKG_ROOT/installed/x64-windows/bin/mpg123.dll deploy/
          cp $env:VCPKG_ROOT/installed/x64-windows/bin/portaudio.dll deploy/
          
      - name: Create ZIP
        run: |
          Compress-Archive -Path deploy/* -DestinationPath QtRadio-Windows-x64.zip
          
      - name: Upload ZIP
        uses: actions/upload-artifact@v3
        with:
          name: QtRadio-Windows-x64.zip
          path: QtRadio-Windows-x64.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.8.0'
          
      - name: Install dependencies
        run: |
          brew install curl mpg123 portaudio
          
      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(sysctl -n hw.ncpu)
          
      - name: Deploy
        run: |
          macdeployqt build/appqtradio.app -qmldir=. -dmg
          
      - name: Upload DMG
        uses: actions/upload-artifact@v3
        with:
          name: QtRadio-macOS.dmg
          path: build/QtRadio.dmg

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/QtRadio-Linux-x86_64.AppImage
            **/QtRadio-Windows-x64.zip
            **/QtRadio-macOS.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
