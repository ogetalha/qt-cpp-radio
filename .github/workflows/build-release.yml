name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.3'
          modules: 'qtdeclarative'
          cache: true
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libmpg123-dev portaudio19-dev pkg-config libgl1-mesa-dev
          
      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          
      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/bin
          cp build/appqtradio AppDir/usr/bin/
          
          # Create desktop file
          mkdir -p AppDir/usr/share/applications
          cat > AppDir/usr/share/applications/qtradio.desktop <<EOF
          [Desktop Entry]
          Type=Application
          Name=Qt Radio
          Exec=appqtradio
          Icon=qtradio
          Categories=AudioVideo;Audio;Player;
          Comment=Internet Radio Player
          Terminal=false
          EOF
          
          # Create AppRun
          cat > AppDir/AppRun <<'EOF'
          #!/bin/bash
          SELF=$(readlink -f "$0")
          HERE=${SELF%/*}
          export LD_LIBRARY_PATH="${HERE}/usr/lib:${LD_LIBRARY_PATH}"
          export QT_PLUGIN_PATH="${HERE}/usr/plugins"
          export QML2_IMPORT_PATH="${HERE}/usr/qml"
          exec "${HERE}/usr/bin/appqtradio" "$@"
          EOF
          chmod +x AppDir/AppRun
          
      - name: Create AppImage
        run: |
          wget -c "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          wget -c "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
          chmod +x linuxdeploy*.AppImage
          
          export QMAKE=$(which qmake6 || which qmake)
          export QML_SOURCES_PATHS=.
          
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage
          
          # Rename to standard name
          mv QtRadio*.AppImage QtRadio-Linux-x86_64.AppImage || mv *.AppImage QtRadio-Linux-x86_64.AppImage
          
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: QtRadio-Linux-x86_64.AppImage
          path: QtRadio-Linux-x86_64.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.3'
          arch: 'win64_msvc2019_64'
          modules: 'qtdeclarative'
          cache: true
          
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
          
      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg integrate install
          .\vcpkg install curl:x64-windows mpg123:x64-windows portaudio:x64-windows
          
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=..\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
          
      - name: Deploy
        run: |
          mkdir deploy
          cp build/Release/appqtradio.exe deploy/
          windeployqt deploy/appqtradio.exe --qmldir . --no-translations
          
          # Copy vcpkg DLLs
          cp vcpkg/installed/x64-windows/bin/libcurl.dll deploy/
          cp vcpkg/installed/x64-windows/bin/mpg123-0.dll deploy/
          cp vcpkg/installed/x64-windows/bin/portaudio.dll deploy/
          cp vcpkg/installed/x64-windows/bin/zlib1.dll deploy/ -ErrorAction SilentlyContinue
          
      - name: Create ZIP
        run: |
          Compress-Archive -Path deploy/* -DestinationPath QtRadio-Windows-x64.zip
          
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: QtRadio-Windows-x64.zip
          path: QtRadio-Windows-x64.zip

  build-macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.3'
          modules: 'qtdeclarative'
          cache: true
          
      - name: Install dependencies
        run: |
          brew install curl mpg123 portaudio pkg-config
          
      - name: Build
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(sysctl -n hw.ncpu)
          
      - name: Deploy
        run: |
          # Use macdeployqt to bundle dependencies
          $Qt6_DIR/bin/macdeployqt build/appqtradio.app -qmldir=. -dmg
          
          # Rename DMG
          mv build/appqtradio.dmg QtRadio-macOS.dmg || mv build/*.dmg QtRadio-macOS.dmg
          
      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: QtRadio-macOS.dmg
          path: QtRadio-macOS.dmg

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
